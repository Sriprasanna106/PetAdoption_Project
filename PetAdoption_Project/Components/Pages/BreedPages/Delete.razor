@page "/breeds/delete"
@using Microsoft.EntityFrameworkCore
@using PetAdoption_Project.Domain
@inject IDbContextFactory<PetAdoption_Project.Data.PetAdoption_ProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Breed</h2>
    <hr />
    @if (breed is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@breed.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@breed.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@breed.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@breed.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@breed.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="breed" OnValidSubmit="DeleteBreed" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(breed is null)">Delete</button> |
            <a href="/breeds">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Breed? breed;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        breed = await context.Breed.FirstOrDefaultAsync(m => m.Id == Id);

        if (breed is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteBreed()
    {
        using var context = DbFactory.CreateDbContext();
        context.Breed.Remove(breed!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/breeds");
    }
}
