@page "/testimonials"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using PetAdoption_Project.Domain
@using PetAdoption_Project.Data
@implements IAsyncDisposable
@inject IDbContextFactory<PetAdoption_Project.Data.PetAdoption_ProjectContext> DbFactory

<PageTitle>Testimonials</PageTitle>

<h1>Testimonials</h1>
<AuthorizeView Roles="User">
    <p>
        <a href="testimonials/create">Create New</a>
    </p>
</AuthorizeView>

<QuickGrid Class="table" Items="context.Testimonials">
    <PropertyColumn Property="testimonials => testimonials.Breed" />
    <PropertyColumn Property="testimonials => testimonials.Rating" />
    <PropertyColumn Property="testimonials => testimonials.Content" />
    <PropertyColumn Property="testimonials => testimonials.DatePosted" />
    <PropertyColumn Property="testimonials => testimonials.DateUpdated" />
    <PropertyColumn Property="testimonials => testimonials.CreatedBy" />
    <PropertyColumn Property="testimonials => testimonials.UpdatedBy" />

    <TemplateColumn Context="testimonials">
        <AuthorizeView Roles="Administrator">
            <a href="@($"testimonials/edit?id={testimonials.Id}")">Edit</a> |
            <a href="@($"testimonials/details?id={testimonials.Id}")">Details</a> |
            <a href="@($"testimonials/delete?id={testimonials.Id}")">Delete</a>
        </AuthorizeView>
    </TemplateColumn>
</QuickGrid>

@code {
    private PetAdoption_ProjectContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}