@page "/customers"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using PetAdoption_Project.Domain
@using PetAdoption_Project.Data
@implements IAsyncDisposable
@inject IDbContextFactory<PetAdoption_Project.Data.PetAdoption_ProjectContext> DbFactory
@attribute [Authorize(Roles="Administrator")]
<PageTitle>Customers</PageTitle>

<h1>Customers</h1>
<!--
<p>
    <a href="customers/create">Create New</a>
</p>
-->

<QuickGrid Class="table" Items="context.Customer">
    <PropertyColumn Property="customer => customer.Name" />
    <PropertyColumn Property="customer => customer.Email" />
    <PropertyColumn Property="customer => customer.Address" />
    <PropertyColumn Property="customer => customer.ContactNumber" />
    <PropertyColumn Property="customer => customer.DateUpdated" />
    <PropertyColumn Property="customer => customer.CreatedBy" />
    <PropertyColumn Property="customer => customer.UpdatedBy" />

    <TemplateColumn Context="customer">
        <a href="@($"customers/edit?id={customer.Id}")">Edit</a> |
        <a href="@($"customers/details?id={customer.Id}")">Details</a> |
        <a href="@($"customers/delete?id={customer.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private PetAdoption_ProjectContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
