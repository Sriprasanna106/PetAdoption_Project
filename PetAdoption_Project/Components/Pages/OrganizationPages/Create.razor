@page "/organizations/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using PetAdoption_Project.Domain
@inject IDbContextFactory<PetAdoption_Project.Data.PetAdoption_ProjectContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Administrator")]
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Organization</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Organization" OnValidSubmit="AddOrganization" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Organization.Name" class="form-control" /> 
                <ValidationMessage For="() => Organization.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Organization.Address" class="form-control" /> 
                <ValidationMessage For="() => Organization.Address" class="text-danger" /> 
            </div>               
            <div class="mb-3">
                <label for="dateupdated" class="form-label">DateUpdated:</label> 
                <InputDate id="dateupdated" @bind-Value="Organization.DateUpdated" class="form-control" /> 
                <ValidationMessage For="() => Organization.DateUpdated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdby" class="form-label">CreatedBy:</label> 
                <InputText id="createdby" @bind-Value="Organization.CreatedBy" class="form-control" /> 
                <ValidationMessage For="() => Organization.CreatedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="updatedby" class="form-label">UpdatedBy:</label> 
                <InputText id="updatedby" @bind-Value="Organization.UpdatedBy" class="form-control" /> 
                <ValidationMessage For="() => Organization.UpdatedBy" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/organizations">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Organization Organization { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddOrganization()
    {
        using var context = DbFactory.CreateDbContext();
        context.Organization.Add(Organization);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/organizations");
    }
}
